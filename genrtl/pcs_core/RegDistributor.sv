// Generated by CIRCT firtool-1.37.0
module RegDistributor(
  input        clock,
               reset,
               in_valid,
  input  [7:0] in_bits_sData,
  input  [1:0] dest,
  input        out_0_ready,
               out_1_ready,
  output       in_ready,
               out_0_valid,
  output [7:0] out_0_bits_sData,
  output       out_1_valid,
  output [7:0] out_1_bits_sData
);

  wire [1:0] nextidest;
  reg  [7:0] iData_sData;
  reg  [1:0] idest;
  wire       _in_ready_output = idest == 2'h0 | nextidest == 2'h0;
  assign nextidest = ~{out_1_ready, out_0_ready} & idest;
  wire       _idest_T = _in_ready_output & in_valid;
  always @(posedge clock) begin
    if (_idest_T)
      iData_sData <= in_bits_sData;
    if (reset)
      idest <= 2'h0;
    else if (_idest_T)
      idest <= dest;
    else
      idest <= nextidest;
  end // always @(posedge)
  assign in_ready = _in_ready_output;
  assign out_0_valid = idest[0];
  assign out_0_bits_sData = iData_sData;
  assign out_1_valid = idest[1];
  assign out_1_bits_sData = iData_sData;
endmodule

